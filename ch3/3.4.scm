(define (make-account balance password)
  (define counter (make-counter 0))
  (define (withdraw amount)
    (if (>= balance amount)
        (begin (set! balance (- balance amount))
               balance)
        "Insufficient funds"))
  (define (deposit amount)
    (set! balance (+ balance amount))
    balance)
  (define (dispatch token m)
    (if (not (eq? token password))
        (if (>= (counter 'read) 7)
            (lambda (a) "The cops have been called")
            (begin (counter 'inc)
                   (lambda (a) (counter 'read))))
        (cond ((eq? m 'withdraw) (counter 'reset) withdraw)
              ((eq? m 'deposit) (counter 'reset) deposit)
              (else (error "Unknown request -- MAKE-ACCOUNT"
                           m)))))
  dispatch)

(define (make-counter count)
  (define (inc)
    (set! count (+ count 1))
    count)
  (define (read) count)
  (define (reset)
    (set! count 0)
    count)
  (define (dispatch m)
    (cond ((eq? m 'inc) (inc))
          ((eq? m 'read) (read))
          ((eq? m 'reset) (reset))
          (else (error "Unknown request -- MAKE-COUNTER"
                       m))))
  dispatch)

(define acc (make-account 100 'secret-password))

((acc 'some-other-password 'deposit) 50)
((acc 'some-other-password 'deposit) 50)
((acc 'some-other-password 'deposit) 50)
((acc 'some-other-password 'deposit) 50)
((acc 'some-other-password 'deposit) 50)
((acc 'some-other-password 'deposit) 50)
((acc 'some-other-password 'deposit) 50)
((acc 'some-other-password 'deposit) 50)
;=> The cops have been called
