; A or B is equivalent to not ((not A) and (not B))

(define (or-gate a1 a2 output)
  (let (!a1 (make-wire))
       (!a2 (make-wire))
       (s (make-wire))
    (inverter a1 !a1)
    (inverter a2 !a2)
    (and-gate !a1 !a2 s)
    (inverter s output)
  'ok))
